//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrbaHotel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class GD1C2018Entities : DbContext
    {
        public GD1C2018Entities()
            : base("name=GD1C2018Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<BajasHotel> BajasHotel { get; set; }
        public DbSet<Clientes> Clientes { get; set; }
        public DbSet<Clientes_Estadias> Clientes_Estadias { get; set; }
        public DbSet<ClientesErrores> ClientesErrores { get; set; }
        public DbSet<Consumibles> Consumibles { get; set; }
        public DbSet<Documentos> Documentos { get; set; }
        public DbSet<Estadias> Estadias { get; set; }
        public DbSet<Estados> Estados { get; set; }
        public DbSet<Facturas> Facturas { get; set; }
        public DbSet<Funcionalidades> Funcionalidades { get; set; }
        public DbSet<Habitaciones> Habitaciones { get; set; }
        public DbSet<Hoteles> Hoteles { get; set; }
        public DbSet<Hoteles_Usuarios> Hoteles_Usuarios { get; set; }
        public DbSet<Items_Facturas> Items_Facturas { get; set; }
        public DbSet<MediosPago> MediosPago { get; set; }
        public DbSet<Regimenes> Regimenes { get; set; }
        public DbSet<Regimenes_Hoteles> Regimenes_Hoteles { get; set; }
        public DbSet<Reservas> Reservas { get; set; }
        public DbSet<Roles> Roles { get; set; }
        public DbSet<Tarjetas> Tarjetas { get; set; }
        public DbSet<TiposHabitaciones> TiposHabitaciones { get; set; }
        public DbSet<Usuarios> Usuarios { get; set; }
        public DbSet<Usuarios_ReservasCancelaciones> Usuarios_ReservasCancelaciones { get; set; }
        public DbSet<Usuarios_ReservasModificaciones> Usuarios_ReservasModificaciones { get; set; }
    
        public virtual ObjectResult<Nullable<bool>> altaCheckInEstadia(Nullable<int> reservaId, Nullable<int> usuarioId, Nullable<System.DateTime> fechaI)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("reservaId", reservaId) :
                new ObjectParameter("reservaId", typeof(int));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("usuarioId", usuarioId) :
                new ObjectParameter("usuarioId", typeof(int));
    
            var fechaIParameter = fechaI.HasValue ?
                new ObjectParameter("fechaI", fechaI) :
                new ObjectParameter("fechaI", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaCheckInEstadia", reservaIdParameter, usuarioIdParameter, fechaIParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaCheckOutEstadia(Nullable<int> estadiaId, Nullable<System.DateTime> fechaI, Nullable<int> usuarioId)
        {
            var estadiaIdParameter = estadiaId.HasValue ?
                new ObjectParameter("estadiaId", estadiaId) :
                new ObjectParameter("estadiaId", typeof(int));
    
            var fechaIParameter = fechaI.HasValue ?
                new ObjectParameter("fechaI", fechaI) :
                new ObjectParameter("fechaI", typeof(System.DateTime));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("usuarioId", usuarioId) :
                new ObjectParameter("usuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaCheckOutEstadia", estadiaIdParameter, fechaIParameter, usuarioIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaCliente(Nullable<long> documento, string tipoDocumento, string nombre, string apellido, string email, string nacionalidad, Nullable<System.DateTime> fechaNac, string calle, Nullable<int> numeroCalle, string piso, string depto, string localidad, string pais, string tel)
        {
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(long));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("nacionalidad", nacionalidad) :
                new ObjectParameter("nacionalidad", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("fechaNac", fechaNac) :
                new ObjectParameter("fechaNac", typeof(System.DateTime));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numeroCalleParameter = numeroCalle.HasValue ?
                new ObjectParameter("numeroCalle", numeroCalle) :
                new ObjectParameter("numeroCalle", typeof(int));
    
            var pisoParameter = piso != null ?
                new ObjectParameter("piso", piso) :
                new ObjectParameter("piso", typeof(string));
    
            var deptoParameter = depto != null ?
                new ObjectParameter("depto", depto) :
                new ObjectParameter("depto", typeof(string));
    
            var localidadParameter = localidad != null ?
                new ObjectParameter("localidad", localidad) :
                new ObjectParameter("localidad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaCliente", documentoParameter, tipoDocumentoParameter, nombreParameter, apellidoParameter, emailParameter, nacionalidadParameter, fechaNacParameter, calleParameter, numeroCalleParameter, pisoParameter, deptoParameter, localidadParameter, paisParameter, telParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaClientes_Estadias(Nullable<int> documento, Nullable<int> tipoDocumento, Nullable<int> estadiaId, Nullable<int> habitacionId, Nullable<int> habitacionHotelId)
        {
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(int));
    
            var estadiaIdParameter = estadiaId.HasValue ?
                new ObjectParameter("estadiaId", estadiaId) :
                new ObjectParameter("estadiaId", typeof(int));
    
            var habitacionIdParameter = habitacionId.HasValue ?
                new ObjectParameter("habitacionId", habitacionId) :
                new ObjectParameter("habitacionId", typeof(int));
    
            var habitacionHotelIdParameter = habitacionHotelId.HasValue ?
                new ObjectParameter("habitacionHotelId", habitacionHotelId) :
                new ObjectParameter("habitacionHotelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaClientes_Estadias", documentoParameter, tipoDocumentoParameter, estadiaIdParameter, habitacionIdParameter, habitacionHotelIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaFactura(Nullable<int> estadiaId, Nullable<int> medioPagoId, Nullable<System.DateTime> fechaI)
        {
            var estadiaIdParameter = estadiaId.HasValue ?
                new ObjectParameter("estadiaId", estadiaId) :
                new ObjectParameter("estadiaId", typeof(int));
    
            var medioPagoIdParameter = medioPagoId.HasValue ?
                new ObjectParameter("medioPagoId", medioPagoId) :
                new ObjectParameter("medioPagoId", typeof(int));
    
            var fechaIParameter = fechaI.HasValue ?
                new ObjectParameter("fechaI", fechaI) :
                new ObjectParameter("fechaI", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaFactura", estadiaIdParameter, medioPagoIdParameter, fechaIParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaFuncionalidadRol(Nullable<int> rol, Nullable<int> funcionalidad)
        {
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(int));
    
            var funcionalidadParameter = funcionalidad.HasValue ?
                new ObjectParameter("funcionalidad", funcionalidad) :
                new ObjectParameter("funcionalidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaFuncionalidadRol", rolParameter, funcionalidadParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaHabitacion(Nullable<int> numero, Nullable<int> piso, string vista, string tipoHabitacion, Nullable<int> hotelId, string descripcion)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var pisoParameter = piso.HasValue ?
                new ObjectParameter("piso", piso) :
                new ObjectParameter("piso", typeof(int));
    
            var vistaParameter = vista != null ?
                new ObjectParameter("vista", vista) :
                new ObjectParameter("vista", typeof(string));
    
            var tipoHabitacionParameter = tipoHabitacion != null ?
                new ObjectParameter("tipoHabitacion", tipoHabitacion) :
                new ObjectParameter("tipoHabitacion", typeof(string));
    
            var hotelIdParameter = hotelId.HasValue ?
                new ObjectParameter("hotelId", hotelId) :
                new ObjectParameter("hotelId", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaHabitacion", numeroParameter, pisoParameter, vistaParameter, tipoHabitacionParameter, hotelIdParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaHotel(string nombre, Nullable<int> cantEstrellas, string calle, Nullable<int> numero, string ciudad, string pais, string email, string telefono, Nullable<System.DateTime> fecha, Nullable<int> recargaEstrellas)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var cantEstrellasParameter = cantEstrellas.HasValue ?
                new ObjectParameter("cantEstrellas", cantEstrellas) :
                new ObjectParameter("cantEstrellas", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var recargaEstrellasParameter = recargaEstrellas.HasValue ?
                new ObjectParameter("recargaEstrellas", recargaEstrellas) :
                new ObjectParameter("recargaEstrellas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaHotel", nombreParameter, cantEstrellasParameter, calleParameter, numeroParameter, ciudadParameter, paisParameter, emailParameter, telefonoParameter, fechaParameter, recargaEstrellasParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaRegimenesHotel(Nullable<int> regimenId, Nullable<int> hotelId)
        {
            var regimenIdParameter = regimenId.HasValue ?
                new ObjectParameter("regimenId", regimenId) :
                new ObjectParameter("regimenId", typeof(int));
    
            var hotelIdParameter = hotelId.HasValue ?
                new ObjectParameter("hotelId", hotelId) :
                new ObjectParameter("hotelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaRegimenesHotel", regimenIdParameter, hotelIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaReserva(Nullable<System.DateTime> fecha, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin, string tipoHabitacion, string regimen, Nullable<long> documento, string tipoDocumento, Nullable<int> usuarioId)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            var tipoHabitacionParameter = tipoHabitacion != null ?
                new ObjectParameter("tipoHabitacion", tipoHabitacion) :
                new ObjectParameter("tipoHabitacion", typeof(string));
    
            var regimenParameter = regimen != null ?
                new ObjectParameter("regimen", regimen) :
                new ObjectParameter("regimen", typeof(string));
    
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(long));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(string));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("usuarioId", usuarioId) :
                new ObjectParameter("usuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaReserva", fechaParameter, inicioParameter, finParameter, tipoHabitacionParameter, regimenParameter, documentoParameter, tipoDocumentoParameter, usuarioIdParameter);
        }
    
        public virtual int altaReservaHabitacion(Nullable<int> reservaId, Nullable<int> habitacionId, Nullable<int> hotelId)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("reservaId", reservaId) :
                new ObjectParameter("reservaId", typeof(int));
    
            var habitacionIdParameter = habitacionId.HasValue ?
                new ObjectParameter("habitacionId", habitacionId) :
                new ObjectParameter("habitacionId", typeof(int));
    
            var hotelIdParameter = hotelId.HasValue ?
                new ObjectParameter("hotelId", hotelId) :
                new ObjectParameter("hotelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("altaReservaHabitacion", reservaIdParameter, habitacionIdParameter, hotelIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaRol(string rol)
        {
            var rolParameter = rol != null ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaRol", rolParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaTarjeta(Nullable<int> facturaId, string banco, string emisor, Nullable<long> numero, string titular)
        {
            var facturaIdParameter = facturaId.HasValue ?
                new ObjectParameter("facturaId", facturaId) :
                new ObjectParameter("facturaId", typeof(int));
    
            var bancoParameter = banco != null ?
                new ObjectParameter("banco", banco) :
                new ObjectParameter("banco", typeof(string));
    
            var emisorParameter = emisor != null ?
                new ObjectParameter("emisor", emisor) :
                new ObjectParameter("emisor", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(long));
    
            var titularParameter = titular != null ?
                new ObjectParameter("titular", titular) :
                new ObjectParameter("titular", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaTarjeta", facturaIdParameter, bancoParameter, emisorParameter, numeroParameter, titularParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> altaUsuario(string rol, string hotelCalle, Nullable<int> hotelNumero, string username, string password, string nombre, string apellido, string email, string tel, string tipoDocumento, Nullable<long> nroDocumento, Nullable<System.DateTime> fechaNacimiento, string direccion)
        {
            var rolParameter = rol != null ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(string));
    
            var hotelCalleParameter = hotelCalle != null ?
                new ObjectParameter("hotelCalle", hotelCalle) :
                new ObjectParameter("hotelCalle", typeof(string));
    
            var hotelNumeroParameter = hotelNumero.HasValue ?
                new ObjectParameter("hotelNumero", hotelNumero) :
                new ObjectParameter("hotelNumero", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(string));
    
            var nroDocumentoParameter = nroDocumento.HasValue ?
                new ObjectParameter("nroDocumento", nroDocumento) :
                new ObjectParameter("nroDocumento", typeof(long));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("altaUsuario", rolParameter, hotelCalleParameter, hotelNumeroParameter, usernameParameter, passwordParameter, nombreParameter, apellidoParameter, emailParameter, telParameter, tipoDocumentoParameter, nroDocumentoParameter, fechaNacimientoParameter, direccionParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> bajaRegimenesHotel(Nullable<int> hotelId)
        {
            var hotelIdParameter = hotelId.HasValue ?
                new ObjectParameter("hotelId", hotelId) :
                new ObjectParameter("hotelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("bajaRegimenesHotel", hotelIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> bajaReserva(Nullable<int> reservaId, Nullable<int> usuarioId, Nullable<int> estadoId, Nullable<System.DateTime> fechaI, string motivo)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("reservaId", reservaId) :
                new ObjectParameter("reservaId", typeof(int));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("usuarioId", usuarioId) :
                new ObjectParameter("usuarioId", typeof(int));
    
            var estadoIdParameter = estadoId.HasValue ?
                new ObjectParameter("estadoId", estadoId) :
                new ObjectParameter("estadoId", typeof(int));
    
            var fechaIParameter = fechaI.HasValue ?
                new ObjectParameter("fechaI", fechaI) :
                new ObjectParameter("fechaI", typeof(System.DateTime));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("bajaReserva", reservaIdParameter, usuarioIdParameter, estadoIdParameter, fechaIParameter, motivoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> bajaReservaHabitacion(Nullable<int> reservaId, Nullable<int> habitacionId, Nullable<int> hotelId)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("reservaId", reservaId) :
                new ObjectParameter("reservaId", typeof(int));
    
            var habitacionIdParameter = habitacionId.HasValue ?
                new ObjectParameter("habitacionId", habitacionId) :
                new ObjectParameter("habitacionId", typeof(int));
    
            var hotelIdParameter = hotelId.HasValue ?
                new ObjectParameter("hotelId", hotelId) :
                new ObjectParameter("hotelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("bajaReservaHabitacion", reservaIdParameter, habitacionIdParameter, hotelIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> bajaReservasVencidas(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("bajaReservasVencidas", fechaParameter);
        }
    
        public virtual ObjectResult<buscarHabitacionesDisponibles_Result> buscarHabitacionesDisponibles(string hotelCalle, Nullable<int> hotelNumero, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string regimen, string tipoHabitacion)
        {
            var hotelCalleParameter = hotelCalle != null ?
                new ObjectParameter("hotelCalle", hotelCalle) :
                new ObjectParameter("hotelCalle", typeof(string));
    
            var hotelNumeroParameter = hotelNumero.HasValue ?
                new ObjectParameter("hotelNumero", hotelNumero) :
                new ObjectParameter("hotelNumero", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var regimenParameter = regimen != null ?
                new ObjectParameter("regimen", regimen) :
                new ObjectParameter("regimen", typeof(string));
    
            var tipoHabitacionParameter = tipoHabitacion != null ?
                new ObjectParameter("tipoHabitacion", tipoHabitacion) :
                new ObjectParameter("tipoHabitacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<buscarHabitacionesDisponibles_Result>("buscarHabitacionesDisponibles", hotelCalleParameter, hotelNumeroParameter, fechaInicioParameter, fechaFinParameter, regimenParameter, tipoHabitacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> buscarHoteles(string rolNombre, Nullable<int> usuarioId)
        {
            var rolNombreParameter = rolNombre != null ?
                new ObjectParameter("rolNombre", rolNombre) :
                new ObjectParameter("rolNombre", typeof(string));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("usuarioId", usuarioId) :
                new ObjectParameter("usuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("buscarHoteles", rolNombreParameter, usuarioIdParameter);
        }
    
        public virtual ObjectResult<string> buscarRegimenesHotel(string calle, Nullable<int> numero)
        {
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("buscarRegimenesHotel", calleParameter, numeroParameter);
        }
    
        public virtual ObjectResult<buscarReservaHabitacion_Result> buscarReservaHabitacion(Nullable<int> reservaId)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("reservaId", reservaId) :
                new ObjectParameter("reservaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<buscarReservaHabitacion_Result>("buscarReservaHabitacion", reservaIdParameter);
        }
    
        public virtual ObjectResult<string> buscarTiposHabitacionesHotel(string calle, Nullable<int> numero)
        {
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("buscarTiposHabitacionesHotel", calleParameter, numeroParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> modificacionCliente(Nullable<long> documento, string nombre, string apellido, string email, string nacionalidad, Nullable<System.DateTime> fechaNac, string calle, Nullable<int> numeroCalle, string piso, string depto, string localidad, string pais, string tel, Nullable<bool> habilitado)
        {
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("nacionalidad", nacionalidad) :
                new ObjectParameter("nacionalidad", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("fechaNac", fechaNac) :
                new ObjectParameter("fechaNac", typeof(System.DateTime));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var numeroCalleParameter = numeroCalle.HasValue ?
                new ObjectParameter("numeroCalle", numeroCalle) :
                new ObjectParameter("numeroCalle", typeof(int));
    
            var pisoParameter = piso != null ?
                new ObjectParameter("piso", piso) :
                new ObjectParameter("piso", typeof(string));
    
            var deptoParameter = depto != null ?
                new ObjectParameter("depto", depto) :
                new ObjectParameter("depto", typeof(string));
    
            var localidadParameter = localidad != null ?
                new ObjectParameter("localidad", localidad) :
                new ObjectParameter("localidad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var habilitadoParameter = habilitado.HasValue ?
                new ObjectParameter("habilitado", habilitado) :
                new ObjectParameter("habilitado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("modificacionCliente", documentoParameter, nombreParameter, apellidoParameter, emailParameter, nacionalidadParameter, fechaNacParameter, calleParameter, numeroCalleParameter, pisoParameter, deptoParameter, localidadParameter, paisParameter, telParameter, habilitadoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> modificacionClientes_Estadias(Nullable<int> documento, Nullable<int> tipoDocumento, Nullable<int> estadiaId, Nullable<int> habitacionId, Nullable<int> habitacionHotelId)
        {
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(int));
    
            var estadiaIdParameter = estadiaId.HasValue ?
                new ObjectParameter("estadiaId", estadiaId) :
                new ObjectParameter("estadiaId", typeof(int));
    
            var habitacionIdParameter = habitacionId.HasValue ?
                new ObjectParameter("habitacionId", habitacionId) :
                new ObjectParameter("habitacionId", typeof(int));
    
            var habitacionHotelIdParameter = habitacionHotelId.HasValue ?
                new ObjectParameter("habitacionHotelId", habitacionHotelId) :
                new ObjectParameter("habitacionHotelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("modificacionClientes_Estadias", documentoParameter, tipoDocumentoParameter, estadiaIdParameter, habitacionIdParameter, habitacionHotelIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> modificacionFactura(Nullable<int> estadiaId, Nullable<int> medioPagoId, Nullable<System.DateTime> fechaI)
        {
            var estadiaIdParameter = estadiaId.HasValue ?
                new ObjectParameter("estadiaId", estadiaId) :
                new ObjectParameter("estadiaId", typeof(int));
    
            var medioPagoIdParameter = medioPagoId.HasValue ?
                new ObjectParameter("medioPagoId", medioPagoId) :
                new ObjectParameter("medioPagoId", typeof(int));
    
            var fechaIParameter = fechaI.HasValue ?
                new ObjectParameter("fechaI", fechaI) :
                new ObjectParameter("fechaI", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("modificacionFactura", estadiaIdParameter, medioPagoIdParameter, fechaIParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> modificacionHabitacion(Nullable<int> habitacionId, Nullable<int> numero, Nullable<int> piso, string vista, string tipoHabitacion, Nullable<int> hotelId, string descripcion, Nullable<bool> habilitado)
        {
            var habitacionIdParameter = habitacionId.HasValue ?
                new ObjectParameter("habitacionId", habitacionId) :
                new ObjectParameter("habitacionId", typeof(int));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var pisoParameter = piso.HasValue ?
                new ObjectParameter("piso", piso) :
                new ObjectParameter("piso", typeof(int));
    
            var vistaParameter = vista != null ?
                new ObjectParameter("vista", vista) :
                new ObjectParameter("vista", typeof(string));
    
            var tipoHabitacionParameter = tipoHabitacion != null ?
                new ObjectParameter("tipoHabitacion", tipoHabitacion) :
                new ObjectParameter("tipoHabitacion", typeof(string));
    
            var hotelIdParameter = hotelId.HasValue ?
                new ObjectParameter("hotelId", hotelId) :
                new ObjectParameter("hotelId", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var habilitadoParameter = habilitado.HasValue ?
                new ObjectParameter("habilitado", habilitado) :
                new ObjectParameter("habilitado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("modificacionHabitacion", habitacionIdParameter, numeroParameter, pisoParameter, vistaParameter, tipoHabitacionParameter, hotelIdParameter, descripcionParameter, habilitadoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> modificacionHotel(Nullable<int> hotelId, string nombre, Nullable<int> cantEstrellas, string calle, Nullable<int> calleNro, string ciudad, string pais, string email, string telefono, Nullable<System.DateTime> fecha, Nullable<bool> habilitado, Nullable<int> recargaEstrellas)
        {
            var hotelIdParameter = hotelId.HasValue ?
                new ObjectParameter("hotelId", hotelId) :
                new ObjectParameter("hotelId", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var cantEstrellasParameter = cantEstrellas.HasValue ?
                new ObjectParameter("cantEstrellas", cantEstrellas) :
                new ObjectParameter("cantEstrellas", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("calle", calle) :
                new ObjectParameter("calle", typeof(string));
    
            var calleNroParameter = calleNro.HasValue ?
                new ObjectParameter("calleNro", calleNro) :
                new ObjectParameter("calleNro", typeof(int));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var habilitadoParameter = habilitado.HasValue ?
                new ObjectParameter("habilitado", habilitado) :
                new ObjectParameter("habilitado", typeof(bool));
    
            var recargaEstrellasParameter = recargaEstrellas.HasValue ?
                new ObjectParameter("recargaEstrellas", recargaEstrellas) :
                new ObjectParameter("recargaEstrellas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("modificacionHotel", hotelIdParameter, nombreParameter, cantEstrellasParameter, calleParameter, calleNroParameter, ciudadParameter, paisParameter, emailParameter, telefonoParameter, fechaParameter, habilitadoParameter, recargaEstrellasParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> modificacionReserva(Nullable<int> reservaId, Nullable<System.DateTime> fecha, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin, string tipoHabitacion, string regimen, Nullable<long> documento, Nullable<int> usuarioId, Nullable<int> tipoDocumento)
        {
            var reservaIdParameter = reservaId.HasValue ?
                new ObjectParameter("reservaId", reservaId) :
                new ObjectParameter("reservaId", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            var tipoHabitacionParameter = tipoHabitacion != null ?
                new ObjectParameter("tipoHabitacion", tipoHabitacion) :
                new ObjectParameter("tipoHabitacion", typeof(string));
    
            var regimenParameter = regimen != null ?
                new ObjectParameter("regimen", regimen) :
                new ObjectParameter("regimen", typeof(string));
    
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(long));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("usuarioId", usuarioId) :
                new ObjectParameter("usuarioId", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento.HasValue ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("modificacionReserva", reservaIdParameter, fechaParameter, inicioParameter, finParameter, tipoHabitacionParameter, regimenParameter, documentoParameter, usuarioIdParameter, tipoDocumentoParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> modificacionUsuario(Nullable<int> userId, string rol, string hotelCalle, Nullable<int> hotelNumero, string username, string password, string nombre, string apellido, string email, string tel, string tipoDocumento, Nullable<long> nroDocumento, Nullable<System.DateTime> fechaNacimiento, string direccion, Nullable<bool> estado)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var rolParameter = rol != null ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(string));
    
            var hotelCalleParameter = hotelCalle != null ?
                new ObjectParameter("hotelCalle", hotelCalle) :
                new ObjectParameter("hotelCalle", typeof(string));
    
            var hotelNumeroParameter = hotelNumero.HasValue ?
                new ObjectParameter("hotelNumero", hotelNumero) :
                new ObjectParameter("hotelNumero", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("tipoDocumento", tipoDocumento) :
                new ObjectParameter("tipoDocumento", typeof(string));
    
            var nroDocumentoParameter = nroDocumento.HasValue ?
                new ObjectParameter("nroDocumento", nroDocumento) :
                new ObjectParameter("nroDocumento", typeof(long));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("modificacionUsuario", userIdParameter, rolParameter, hotelCalleParameter, hotelNumeroParameter, usernameParameter, passwordParameter, nombreParameter, apellidoParameter, emailParameter, telParameter, tipoDocumentoParameter, nroDocumentoParameter, fechaNacimientoParameter, direccionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<top5_clientes_puntos_Result> top5_clientes_puntos(Nullable<decimal> trimestre, Nullable<decimal> anio)
        {
            var trimestreParameter = trimestre.HasValue ?
                new ObjectParameter("trimestre", trimestre) :
                new ObjectParameter("trimestre", typeof(decimal));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<top5_clientes_puntos_Result>("top5_clientes_puntos", trimestreParameter, anioParameter);
        }
    
        public virtual ObjectResult<top5_habitaciones_veces_ocupadas_Result> top5_habitaciones_veces_ocupadas(Nullable<decimal> trimestre, Nullable<decimal> anio)
        {
            var trimestreParameter = trimestre.HasValue ?
                new ObjectParameter("trimestre", trimestre) :
                new ObjectParameter("trimestre", typeof(decimal));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<top5_habitaciones_veces_ocupadas_Result>("top5_habitaciones_veces_ocupadas", trimestreParameter, anioParameter);
        }
    
        public virtual ObjectResult<top5_hoteles_consumibles_facturados_Result> top5_hoteles_consumibles_facturados(Nullable<decimal> trimestre, Nullable<decimal> anio)
        {
            var trimestreParameter = trimestre.HasValue ?
                new ObjectParameter("trimestre", trimestre) :
                new ObjectParameter("trimestre", typeof(decimal));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<top5_hoteles_consumibles_facturados_Result>("top5_hoteles_consumibles_facturados", trimestreParameter, anioParameter);
        }
    
        public virtual ObjectResult<top5_hoteles_dias_fuera_de_servicio_Result> top5_hoteles_dias_fuera_de_servicio(Nullable<decimal> trimestre, Nullable<decimal> anio)
        {
            var trimestreParameter = trimestre.HasValue ?
                new ObjectParameter("trimestre", trimestre) :
                new ObjectParameter("trimestre", typeof(decimal));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<top5_hoteles_dias_fuera_de_servicio_Result>("top5_hoteles_dias_fuera_de_servicio", trimestreParameter, anioParameter);
        }
    
        public virtual ObjectResult<top5_hoteles_reservas_canceladas_Result> top5_hoteles_reservas_canceladas(Nullable<decimal> trimestre, Nullable<decimal> anio)
        {
            var trimestreParameter = trimestre.HasValue ?
                new ObjectParameter("trimestre", trimestre) :
                new ObjectParameter("trimestre", typeof(decimal));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<top5_hoteles_reservas_canceladas_Result>("top5_hoteles_reservas_canceladas", trimestreParameter, anioParameter);
        }
    }
}
